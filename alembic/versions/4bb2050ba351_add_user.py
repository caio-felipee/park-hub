"""Add user

Revision ID: 4bb2050ba351
Revises: 6e5cc093f2ba
Create Date: 2025-09-28 00:57:44.707243

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "4bb2050ba351"
down_revision: Union[str, Sequence[str], None] = "6e5cc093f2ba"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password_hash", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__user")),
    )
    op.create_index(op.f("ix__user_email"), "user", ["email"], unique=True)
    op.create_table(
        "customer",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("userId", sa.Uuid(), nullable=False),
        sa.Column("firstName", sa.String(), nullable=False),
        sa.Column("lastName", sa.String(), nullable=False),
        sa.Column("birthDate", sa.Date(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["userId"], ["user.id"], name=op.f("fk__customer__userId__user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__customer")),
        sa.UniqueConstraint("userId", name=op.f("uq__customer__userId")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("customer")
    op.drop_index(op.f("ix__user_email"), table_name="user")
    op.drop_table("user")
    # ### end Alembic commands ###
